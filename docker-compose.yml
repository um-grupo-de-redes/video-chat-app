version: '3'

volumes:
  production_certbot_www: {}
  production_certbot_conf: {}

services:
  chat:
    build:
      context: ./chat
      dockerfile: ./Dockerfile
    image: production_chat
    container_name: production_chat
    restart: always
    networks:
      - apache-access

  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: ./Dockerfile
  #   image: production_nginx
  #   container_name: production_nginx
  #   restart: "always"
  #   env_file:
  #     - ./.envs/production/server_name
  #   ports:
  #     - '80:80'
  #     - "443:443/tcp"
  #     # - "443:443/udp"
  #   networks:
  #     - apache-access
  #   volumes:
  #     - production_certbot_www:/var/www/certbot/:ro
  #     - production_certbot_conf:/etc/nginx/ssl/:ro
  #   healthcheck:
  #     test: ps | grep "nginx" | grep "worker process" | grep -v "grep"
  #     interval: 10s
  #     retries: 10
  #     start_period: 3s
  #     timeout: 5s

  certbot:
    build:
      context: ./certbot
      dockerfile: ./Dockerfile
    image: production_certbot
    container_name: production_certbot
    restart: "always"
    depends_on:
      apache:
        condition: service_healthy
    env_file:
      - ./.envs/production/server_name
      - ./.envs/production/email
    volumes:
      - production_certbot_www:/var/www/certbot/:rw
      - production_certbot_conf:/etc/letsencrypt/:rw

  apache:
    build:
      context: ./apache
      dockerfile: ./Dockerfile
    image: production_apache
    container_name: production_apache
    restart: always
    ports:
      - '80:80'
      - '443:443'
    networks:
      - apache-access
    volumes:
      - production_certbot_www:/var/www/certbot:ro
      - production_certbot_conf:/usr/local/apache2:ro
  # TODO: healthcheck
  #   healthcheck:
  #     test: ps | grep "nginx" | grep "worker process" | grep -v "grep"
  #     interval: 10s
  #     retries: 10
  #     start_period: 3s
  #     timeout: 5s

networks:
  apache-access:
    driver: bridge
